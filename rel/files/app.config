%% -*- mode: Erlang; -*-
[
 %% dnsxd config,
 {dnsxd, [
	  % interfaces dnsxd should listen on
	  {interfaces, [{"::", 53, udp},
			{"::", 53, tcp},
			{"::", 5352, udp},
			{"::", 5352, tcp}]},
	  % the largest EDNS message that can be transmitted
	  {udp_payload_size, 1440},
	  % the largest UDP datagram that can be received
	  {udp_recbuf_size, 32768},
	  % idle period in seconds before a TCP connection is closed
	  {tcp_timeout, 60},
	  % procket allows Erlang to bind privileged ports whilst running as
	  % an unprivileged user. see https://github.com/msantos/procket
	  {procket, [{enabled, true},         % use procket (if needed)
		     {progname, "procket"}]}, % path to procket helper
	  % maximum number of Erlang processes that may be spawned per
	  % interface before messages are queued and then possibly dropped
	  {max_workers, 1024},
	  % DNS Update Lease parameters
	  {update_opts, [{min_lease, 600},    % minimum lease period in seconds
			 {max_lease, 1200},   % maximum lease period in seconds
			 % if a DNS Update message does not have a lease,
			 % the period specified here is used
			 {default_lease, undefined}]},
	  % DNS Long Lived Query parameters
	  {llq_opts, [{max_length, 7200},   % maximum lease period in seconds
		      {min_length, 900},    % minimum lease period in seconds
		      {max_llq, 500},       % maximum (global) llq processes
		      % if this period elapses without an LLQ client being
		      % sent a message, an empty message will be sent to keep
		      % the connection alive
		      {udp_keepalive, 29}]},
	  % Storage module; if this module implements the gen_server or
	  % supervisor behaviours, it will be started and supervised by dnsxd.
	  {datastore_mod, dnsxd_couch},
	  % Datastore options for dnsxd_couch. With the exception of
	  % init_timeout, these are standard CouchBeam parameters
	  {datastore_opts, [{host, "localhost"}, {port, 5984},
			    {prefix, ""},
			    % {options, [{basic_auth, {"username", "password"}}]},
			    {database, "dnsxd_zones"},
			    % max time to allow for loading zones at startup
			    {init_timeout, 60000},
			    % number of times to attempt a DNS Update
			    {update_attempts, 10}
			   ]},
	  %% Log module. Will be started and supervised by dnsxd if it's
	  %% a gen_server or supervisor.
	  {log_mod, dnsxd_disklog},
	  {log_opts, []}
	 ]},
 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
         ]}
].
